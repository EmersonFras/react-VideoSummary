{"ast":null,"code":"var _jsxFileName = \"/home/emersonfrasure/Projects/react-VideoSummary/src/features/videos/EditVideo.js\",\n  _s = $RefreshSig$();\nimport { useParams } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { useGetVideosQuery, selectVideoById } from './videosApiSlice';\nimport EditVideoForm from './EditVideoForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditVideo = () => {\n  _s();\n  const {\n    userId,\n    videoId\n  } = useParams();\n  // Fetch all videos (or only fetch based on userId if needed)\n  const {\n    data: videos,\n    isLoading,\n    isError\n  } = useGetVideosQuery();\n\n  // Use the selector to find the video by ID once the data is available\n  const video = useSelector(state => selectVideoById(state, videoId));\n  const content = video ? /*#__PURE__*/_jsxDEV(EditVideoForm, {\n    video: video\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 29\n  }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 63\n  }, this);\n  return content;\n};\n_s(EditVideo, \"17wapGUyuHOCn12qBY4mM6w8nDM=\", false, function () {\n  return [useParams, useGetVideosQuery, useSelector];\n});\n_c = EditVideo;\nexport default EditVideo;\nvar _c;\n$RefreshReg$(_c, \"EditVideo\");","map":{"version":3,"names":["useParams","useSelector","useGetVideosQuery","selectVideoById","EditVideoForm","jsxDEV","_jsxDEV","EditVideo","_s","userId","videoId","data","videos","isLoading","isError","video","state","content","fileName","_jsxFileName","lineNumber","columnNumber","children","_c","$RefreshReg$"],"sources":["/home/emersonfrasure/Projects/react-VideoSummary/src/features/videos/EditVideo.js"],"sourcesContent":["import { useParams } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport { useGetVideosQuery, selectVideoById } from './videosApiSlice'\nimport EditVideoForm from './EditVideoForm'\n\n\nconst EditVideo = () => {\n    const { userId, videoId } = useParams()\n        // Fetch all videos (or only fetch based on userId if needed)\n        const { data: videos, isLoading, isError } = useGetVideosQuery()\n\n        // Use the selector to find the video by ID once the data is available\n        const video = useSelector(state => selectVideoById(state, videoId))\n\n    const content = video ? <EditVideoForm video={video} /> : <p>Loading...</p>\n\n    return content\n}\n\nexport default EditVideo"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,iBAAiB,EAAEC,eAAe,QAAQ,kBAAkB;AACrE,OAAOC,aAAa,MAAM,iBAAiB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAG3C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM;IAAEC,MAAM;IAAEC;EAAQ,CAAC,GAAGV,SAAS,CAAC,CAAC;EACnC;EACA,MAAM;IAAEW,IAAI,EAAEC,MAAM;IAAEC,SAAS;IAAEC;EAAQ,CAAC,GAAGZ,iBAAiB,CAAC,CAAC;;EAEhE;EACA,MAAMa,KAAK,GAAGd,WAAW,CAACe,KAAK,IAAIb,eAAe,CAACa,KAAK,EAAEN,OAAO,CAAC,CAAC;EAEvE,MAAMO,OAAO,GAAGF,KAAK,gBAAGT,OAAA,CAACF,aAAa;IAACW,KAAK,EAAEA;EAAM;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,gBAAGf,OAAA;IAAAgB,QAAA,EAAG;EAAU;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAE3E,OAAOJ,OAAO;AAClB,CAAC;AAAAT,EAAA,CAXKD,SAAS;EAAA,QACiBP,SAAS,EAEYE,iBAAiB,EAGhDD,WAAW;AAAA;AAAAsB,EAAA,GAN3BhB,SAAS;AAaf,eAAeA,SAAS;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}