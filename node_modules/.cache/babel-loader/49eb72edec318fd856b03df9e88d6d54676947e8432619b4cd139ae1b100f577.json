{"ast":null,"code":"var _jsxFileName = \"/home/emersonfrasure/Projects/react-VideoSummary/src/features/users/NewUserForm.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { useAddNewUserMutation } from './usersApiSlice';\nimport { Navigate, useNavigate } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSave } from '@fortawesome/free-solid-svg-icons';\nimport { ROLES } from '../../config/roles';\n\n// TO DO add more guidance on user creation\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst USER_REGEX = /^[A-z]{3-20}$/;\nconst PWD_REGEX = /^[A-z0-9!@#$%]{4,12}$/;\nconst NewUserForm = () => {\n  _s();\n  var _error$data;\n  const [addNewUser, {\n    isLoading,\n    isSuccess,\n    isError,\n    error\n  }] = useAddNewUserMutation();\n  const naviagte = useNavigate();\n  const [username, setUsername] = useState('');\n  const [validUsername, setValidUsername] = useState(false);\n  const [password, setPassword] = useState('');\n  const [validPassword, setValidPassword] = useState(false);\n  const [role, setRole] = useState(ROLES.User);\n  useEffect(() => {\n    setValidUsername(USER_REGEX.test(username));\n  }, [username]);\n  useEffect(() => {\n    setValidPassword(PWD_REGEX.test(password));\n  }, [password]);\n  useEffect(() => {\n    if (isSuccess) {\n      setUsername('');\n      setPassword('');\n      setRoles([]);\n      Navigate('/dash/users'); // TO DO - needs changed\n    }\n  }, [isSuccess, naviagte]);\n  const onUsernameChanged = e => setUsername(e.target.value);\n  const onPasswordChanged = e => setPassword(e.target.value);\n  const onRolesChanged = e => {\n    const values = Array.from(e.target.selectedOptions,\n    // HTML collection\n    option => option.value);\n    setRoles(values);\n  };\n  const canSave = [roles.length, validUsername, validPassword].every(Boolean) && !isLoading;\n  const onSaveUserClicked = async e => {\n    e.preventDefault();\n    if (canSave) {\n      await addNewUser({\n        username,\n        password,\n        roles\n      });\n    }\n  };\n  const options = Object.values(ROLES).map(role => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: role,\n      children: [\" \", role]\n    }, role, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this);\n  });\n  const errClass = isError ? \"errmsg\" : \"offscreen\";\n  const validUserClass = !validUsername ? \"form__input--incomplete\" : \"\";\n  const validPwdClass = !validPassword ? \"form__input--incomplete\" : \"\";\n  const validRolesClass = !Boolean(roles.length) ? \"form__input--incomplete\" : \"\";\n  content = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: errClass,\n      children: error === null || error === void 0 ? void 0 : (_error$data = error.data) === null || _error$data === void 0 ? void 0 : _error$data.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: onSaveUserClicked,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form__title-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"New User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          clssName: \"form__action-buttons\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"icon-button\",\n            title: \"Save\",\n            disabled: !canSave,\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faSave\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form__label\",\n        htmlFor: \"username\",\n        children: [\"Username: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"nowrap\",\n          children: \"[3-20letters]\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: `form__input ${validUserClass}`,\n        id: \"username\",\n        name: \"username\",\n        type: \"text\",\n        autoComplete: \"off\",\n        value: username,\n        onChange: onUsernameChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form__label\",\n        htmlFor: \"password\",\n        children: [\"Password: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"nowrap\",\n          children: \"[4-12 chars incl. !@#$%]\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: `form__input ${validPwdClass}`,\n        id: \"password\",\n        name: \"password\",\n        type: \"password\",\n        value: password,\n        onChange: onPasswordChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form__label\",\n        htmlFor: \"roles\",\n        children: \"Assigned Roles:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"roles\",\n        name: \"roles\",\n        className: `form__input ${validRolesClass}`,\n        multiple: true,\n        size: \"2\",\n        value: roles,\n        onChange: onRolesChanged,\n        children: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n  return content;\n};\n_s(NewUserForm, \"ei50DfIdDoFgDIvteRa+BWc87iw=\", false, function () {\n  return [useAddNewUserMutation, useNavigate];\n});\n_c = NewUserForm;\nexport default NewUserForm;\nvar _c;\n$RefreshReg$(_c, \"NewUserForm\");","map":{"version":3,"names":["useState","useEffect","useAddNewUserMutation","Navigate","useNavigate","FontAwesomeIcon","faSave","ROLES","jsxDEV","_jsxDEV","Fragment","_Fragment","USER_REGEX","PWD_REGEX","NewUserForm","_s","_error$data","addNewUser","isLoading","isSuccess","isError","error","naviagte","username","setUsername","validUsername","setValidUsername","password","setPassword","validPassword","setValidPassword","role","setRole","User","test","setRoles","onUsernameChanged","e","target","value","onPasswordChanged","onRolesChanged","values","Array","from","selectedOptions","option","canSave","roles","length","every","Boolean","onSaveUserClicked","preventDefault","options","Object","map","children","fileName","_jsxFileName","lineNumber","columnNumber","errClass","validUserClass","validPwdClass","validRolesClass","content","className","data","message","onSubmit","clssName","title","disabled","icon","htmlFor","id","name","type","autoComplete","onChange","multiple","size","_c","$RefreshReg$"],"sources":["/home/emersonfrasure/Projects/react-VideoSummary/src/features/users/NewUserForm.js"],"sourcesContent":["import { useState, useEffect } from 'react'\nimport { useAddNewUserMutation } from './usersApiSlice'\nimport { Navigate, useNavigate } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSave } from '@fortawesome/free-solid-svg-icons'\nimport { ROLES } from '../../config/roles'\n\n// TO DO add more guidance on user creation\n\nconst USER_REGEX = /^[A-z]{3-20}$/\nconst PWD_REGEX = /^[A-z0-9!@#$%]{4,12}$/\n\n\nconst NewUserForm = () => {\n\n    const [addNewUser, {\n        isLoading,\n        isSuccess,\n        isError,\n        error\n    }] = useAddNewUserMutation() \n\n    const naviagte = useNavigate()\n\n    const [username, setUsername] = useState('')\n    const [validUsername, setValidUsername] = useState(false)\n    const [password, setPassword] = useState('')\n    const [validPassword, setValidPassword] = useState(false)\n    const [role, setRole] = useState(ROLES.User)\n\n    useEffect(() => {\n        setValidUsername(USER_REGEX.test(username))\n    }, [username])\n\n    useEffect(() => {\n        setValidPassword(PWD_REGEX.test(password))\n    }, [password])\n\n    useEffect(() => {\n        if (isSuccess) {\n            setUsername('')\n            setPassword('')\n            setRoles([])\n            Navigate('/dash/users') // TO DO - needs changed\n        }\n    }, [isSuccess, naviagte])\n\n    const onUsernameChanged = e => setUsername(e.target.value)\n    const onPasswordChanged = e => setPassword(e.target.value)\n\n    const onRolesChanged = e => {\n        const values = Array.from(\n            e.target.selectedOptions, // HTML collection\n            (option) => option.value\n        )\n        setRoles(values)\n    }\n\n    const canSave = [roles.length, validUsername, validPassword].every(Boolean) && !isLoading\n\n    const onSaveUserClicked = async (e) => {\n        e.preventDefault()\n        if (canSave) {\n            await addNewUser({ username, password, roles })\n        }\n    }\n\n    const options = Object.values(ROLES).map(role => {\n        return (\n            <option key={role} value={role}> {role}</option>\n        )\n    })\n\n    const errClass = isError ? \"errmsg\" : \"offscreen\"\n    const validUserClass = !validUsername ? \"form__input--incomplete\" : \"\"\n    const validPwdClass = !validPassword ? \"form__input--incomplete\" : \"\"\n    const validRolesClass = !Boolean(roles.length) ? \"form__input--incomplete\" : \"\"\n\n    content = (\n        <>\n            <p className={errClass}>{error?.data?.message}</p>\n\n            <form className=\"form\" onSubmit={onSaveUserClicked}>\n                <div className=\"form__title-row\">\n                    <h2>New User</h2>\n                    <div clssName=\"form__action-buttons\">\n                        <button className=\"icon-button\" title=\"Save\" disabled={!canSave}>\n                            <FontAwesomeIcon icon={faSave} />\n                        </button>\n                    </div>\n                </div>\n                <label className=\"form__label\" htmlFor=\"username\">\n                    Username: <span className=\"nowrap\">[3-20letters]</span></label>\n                <input className={`form__input ${validUserClass}`} id=\"username\" name=\"username\" type=\"text\" autoComplete=\"off\" value={username} onChange={onUsernameChanged} />\n                <label className=\"form__label\" htmlFor=\"password\">\n                    Password: <span className=\"nowrap\">[4-12 chars incl. !@#$%]</span></label>\n                <input className={`form__input ${validPwdClass}`} id=\"password\" name=\"password\" type=\"password\" value={password} onChange={onPasswordChanged} />\n\n                <label className=\"form__label\" htmlFor=\"roles\">Assigned Roles:</label>\n                <select id=\"roles\" name=\"roles\" className={`form__input ${validRolesClass}`} multiple={true} size=\"2\" value={roles} onChange={onRolesChanged}>{options}</select>\n            </form>\n        </>\n    )\n\n\n    return content\n}\n\nexport default NewUserForm"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}