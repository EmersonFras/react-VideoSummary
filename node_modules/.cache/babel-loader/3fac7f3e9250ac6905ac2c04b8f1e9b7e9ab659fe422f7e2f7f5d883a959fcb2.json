{"ast":null,"code":"import { createSelector, createEntityAdapter } from \"@reduxjs/toolkit\";\nimport { apiSlice } from \"../../app/api/apiSlice\";\nconst usersAdapter = createEntityAdapter({});\nconst initialState = usersAdapter.getInitialState();\nexport const usersApiSlice = apiSlice.injectEndpoints({\n  endpoints: builder => ({\n    getUsers: builder.query({\n      query: () => '/users',\n      validateStatus: (response, result) => {\n        return response.status === 200 && !result.isError;\n      },\n      keepUnusedDataFor: 5,\n      // for development default is 60\n      transformResponse: responseData => {\n        const loadedUsers = responseData.map(user => {\n          user.id = user._id;\n          return user;\n        });\n        return usersAdapter.setAll(initialState, loadedUsers);\n      },\n      providesTags: (result, error, arg) => {\n        if (result !== null && result !== void 0 && result.ids) {\n          return [{\n            type: 'User',\n            id: 'LIST'\n          }, ...result.ids.map(id => ({\n            type: 'User',\n            id\n          }))];\n        } else return [{\n          type: 'User',\n          id: 'LIST'\n        }];\n      }\n    }),\n    getUserById: builder.query({\n      query: userId => `/users/${userId}`,\n      // Ensure this matches your API endpoint\n      transformResponse: responseData => {\n        responseData.id = responseData._id; // Adjust as needed\n        return responseData;\n      },\n      providesTags: (result, error, id) => [{\n        type: 'User',\n        id\n      }]\n    })\n  })\n});\nexport const {\n  useGetUsersQuery,\n  useGetUserByIdQuery\n} = usersApiSlice;\nexport const selectUsersResult = usersApiSlice.endpoints.getUsers.select();\nconst selectUsersData = createSelector(selectUsersResult, usersResult => usersResult.data);\nexport const {\n  selectAll: selectAllUsers,\n  selectById: selectUserById,\n  selectIds: selectUserIds\n} = usersAdapter.getSelectors(state => {\n  var _selectUsersData;\n  return (_selectUsersData = selectUsersData(state)) !== null && _selectUsersData !== void 0 ? _selectUsersData : initialState;\n});","map":{"version":3,"names":["createSelector","createEntityAdapter","apiSlice","usersAdapter","initialState","getInitialState","usersApiSlice","injectEndpoints","endpoints","builder","getUsers","query","validateStatus","response","result","status","isError","keepUnusedDataFor","transformResponse","responseData","loadedUsers","map","user","id","_id","setAll","providesTags","error","arg","ids","type","getUserById","userId","useGetUsersQuery","useGetUserByIdQuery","selectUsersResult","select","selectUsersData","usersResult","data","selectAll","selectAllUsers","selectById","selectUserById","selectIds","selectUserIds","getSelectors","state","_selectUsersData"],"sources":["/home/emersonfrasure/Projects/react-VideoSummary/src/features/users/usersApiSlice.js"],"sourcesContent":["import {\n    createSelector,\n    createEntityAdapter\n} from \"@reduxjs/toolkit\"\nimport { apiSlice } from \"../../app/api/apiSlice\"\n\nconst usersAdapter = createEntityAdapter({})\n\nconst initialState = usersAdapter.getInitialState()\n\nexport const usersApiSlice = apiSlice.injectEndpoints({\n    endpoints: builder => ({\n        getUsers: builder.query({\n            query: () => '/users',\n            validateStatus: (response, result) => {\n                return response.status === 200 && !result.isError\n            },\n            keepUnusedDataFor: 5, // for development default is 60\n            transformResponse: responseData => {\n                const loadedUsers = responseData.map(user => {\n                    user.id = user._id\n                    return user\n                })\n                return usersAdapter.setAll(initialState, loadedUsers)\n            },\n            providesTags: (result, error, arg) => {\n                if (result?.ids) {\n                    return [\n                        { type: 'User', id: 'LIST' },\n                        ...result.ids.map(id => ({ type: 'User', id }))\n                    ]\n                } else return [{ type: 'User', id: 'LIST' }]\n            }\n        }),\n        getUserById: builder.query({\n            query: userId => `/users/${userId}`, // Ensure this matches your API endpoint\n            transformResponse: responseData => {\n                responseData.id = responseData._id; // Adjust as needed\n                return responseData;\n            },\n            providesTags: (result, error, id) => [{ type: 'User', id }],\n        })\n    })\n})\n\nexport const {\n    useGetUsersQuery,\n    useGetUserByIdQuery,\n} = usersApiSlice\n\nexport const selectUsersResult = usersApiSlice.endpoints.getUsers.select()\n\nconst selectUsersData = createSelector(\n    selectUsersResult,\n    usersResult => usersResult.data\n)\n\nexport const {\n    selectAll: selectAllUsers,\n    selectById: selectUserById,\n    selectIds: selectUserIds\n\n} = usersAdapter.getSelectors(state => selectUsersData(state) ?? initialState)"],"mappings":"AAAA,SACIA,cAAc,EACdC,mBAAmB,QAChB,kBAAkB;AACzB,SAASC,QAAQ,QAAQ,wBAAwB;AAEjD,MAAMC,YAAY,GAAGF,mBAAmB,CAAC,CAAC,CAAC,CAAC;AAE5C,MAAMG,YAAY,GAAGD,YAAY,CAACE,eAAe,CAAC,CAAC;AAEnD,OAAO,MAAMC,aAAa,GAAGJ,QAAQ,CAACK,eAAe,CAAC;EAClDC,SAAS,EAAEC,OAAO,KAAK;IACnBC,QAAQ,EAAED,OAAO,CAACE,KAAK,CAAC;MACpBA,KAAK,EAAEA,CAAA,KAAM,QAAQ;MACrBC,cAAc,EAAEA,CAACC,QAAQ,EAAEC,MAAM,KAAK;QAClC,OAAOD,QAAQ,CAACE,MAAM,KAAK,GAAG,IAAI,CAACD,MAAM,CAACE,OAAO;MACrD,CAAC;MACDC,iBAAiB,EAAE,CAAC;MAAE;MACtBC,iBAAiB,EAAEC,YAAY,IAAI;QAC/B,MAAMC,WAAW,GAAGD,YAAY,CAACE,GAAG,CAACC,IAAI,IAAI;UACzCA,IAAI,CAACC,EAAE,GAAGD,IAAI,CAACE,GAAG;UAClB,OAAOF,IAAI;QACf,CAAC,CAAC;QACF,OAAOnB,YAAY,CAACsB,MAAM,CAACrB,YAAY,EAAEgB,WAAW,CAAC;MACzD,CAAC;MACDM,YAAY,EAAEA,CAACZ,MAAM,EAAEa,KAAK,EAAEC,GAAG,KAAK;QAClC,IAAId,MAAM,aAANA,MAAM,eAANA,MAAM,CAAEe,GAAG,EAAE;UACb,OAAO,CACH;YAAEC,IAAI,EAAE,MAAM;YAAEP,EAAE,EAAE;UAAO,CAAC,EAC5B,GAAGT,MAAM,CAACe,GAAG,CAACR,GAAG,CAACE,EAAE,KAAK;YAAEO,IAAI,EAAE,MAAM;YAAEP;UAAG,CAAC,CAAC,CAAC,CAClD;QACL,CAAC,MAAM,OAAO,CAAC;UAAEO,IAAI,EAAE,MAAM;UAAEP,EAAE,EAAE;QAAO,CAAC,CAAC;MAChD;IACJ,CAAC,CAAC;IACFQ,WAAW,EAAEtB,OAAO,CAACE,KAAK,CAAC;MACvBA,KAAK,EAAEqB,MAAM,IAAI,UAAUA,MAAM,EAAE;MAAE;MACrCd,iBAAiB,EAAEC,YAAY,IAAI;QAC/BA,YAAY,CAACI,EAAE,GAAGJ,YAAY,CAACK,GAAG,CAAC,CAAC;QACpC,OAAOL,YAAY;MACvB,CAAC;MACDO,YAAY,EAAEA,CAACZ,MAAM,EAAEa,KAAK,EAAEJ,EAAE,KAAK,CAAC;QAAEO,IAAI,EAAE,MAAM;QAAEP;MAAG,CAAC;IAC9D,CAAC;EACL,CAAC;AACL,CAAC,CAAC;AAEF,OAAO,MAAM;EACTU,gBAAgB;EAChBC;AACJ,CAAC,GAAG5B,aAAa;AAEjB,OAAO,MAAM6B,iBAAiB,GAAG7B,aAAa,CAACE,SAAS,CAACE,QAAQ,CAAC0B,MAAM,CAAC,CAAC;AAE1E,MAAMC,eAAe,GAAGrC,cAAc,CAClCmC,iBAAiB,EACjBG,WAAW,IAAIA,WAAW,CAACC,IAC/B,CAAC;AAED,OAAO,MAAM;EACTC,SAAS,EAAEC,cAAc;EACzBC,UAAU,EAAEC,cAAc;EAC1BC,SAAS,EAAEC;AAEf,CAAC,GAAG1C,YAAY,CAAC2C,YAAY,CAACC,KAAK;EAAA,IAAAC,gBAAA;EAAA,QAAAA,gBAAA,GAAIX,eAAe,CAACU,KAAK,CAAC,cAAAC,gBAAA,cAAAA,gBAAA,GAAI5C,YAAY;AAAA,EAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}